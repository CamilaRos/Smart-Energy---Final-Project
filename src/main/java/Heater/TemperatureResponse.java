// Generated by the protocol buffer compiler.  DO NOT EDIT!
// Source: heater.proto

package Heater;

import io.grpc.ServerBuilder;
import com.google.protobuf.ByteString;
import com.google.protobuf.InvalidProtocolBufferException;
import com.google.protobuf.UnknownFieldSet;
import com.google.protobuf.Descriptors;

/**
 * <pre>
 *  Heater Service Definition
 * </pre>
 *
 * Protobuf type {@code SmartEnergy.TemperatureResponse}
 */
public final class TemperatureResponse extends
        com.google.protobuf.GeneratedMessageV3 implements
        Heater.TemperatureResponseOrBuilder {
    private static final long serialVersionUID = 0L;

    // Use TemperatureResponse.newBuilder() to construct.
    private TemperatureResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
    }

    private TemperatureResponse() {
        heatingOff_ = "";
    }

    // Method getLength to implement
    @Override
    public int getLength() {
        return 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
        return this.unknownFields;
    }

    private TemperatureResponse(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFieldsBuilder =
                com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
            boolean done = false;
            while (!done) {
                int tag = input.readTag();
                switch (tag) {
                    case 0:
                        done = true;
                        break;
                    case 10: {
                        java.lang.String s = input.readStringRequireUtf8();
                        heatingOff_ = s;
                        break;
                    }
                    default: {
                        if (!parseUnknownFieldProto3(
                                input, unknownFieldsBuilder, extensionRegistry, tag)) {
                            done = true;
                        }
                        break;
                    }
                }
            }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
        } finally {
            this.unknownFields = unknownFieldsBuilder.build();
            makeExtensionsImmutable();
        }
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return Heater.HeaterServiceImpl.internal_static_SmartEnergy_TemperatureResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
        return Heater.HeaterServiceImpl.internal_static_SmartEnergy_TemperatureResponse_fieldAccessorTable
                .ensureFieldAccessorsInitialized(Heater.TemperatureResponse.class, Heater.TemperatureResponse.Builder.class);
    }

    public static final int HEATINGOFF_FIELD_NUMBER = 1;
    private volatile java.lang.Object heatingOff_;

    /**
     * <code> string heatingOff = 1;</code>
     */
    public com.google.protobuf.ByteString
    getHeatingOffBytes() {
        java.lang.Object ref = heatingOff_;
        if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b =
                    com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
            heatingOff_ = b;
            return b;
        } else {
            return (com.google.protobuf.ByteString) ref;
        }
    }
    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;
        memoizedIsInitialized = 1;
        return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
            throws java.io.IOException {
        if (!getHeatingOffBytes().isEmpty()) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 1, heatingOff_);
        }
        unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;
        size = 0;
        if (!getHeatingOffBytes().isEmpty()) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, heatingOff_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
    }
    public java.lang.String getHeatingOff() {
        java.lang.Object ref = heatingOff_;
        if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
        } else {
            com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (com.google.protobuf.Internal.isValidUtf8(bs)) {
                heatingOff_ = s;
            }
            return s;
        }
    }
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof Heater.TemperatureResponse)) {
            return super.equals(obj);
        }
        Heater.TemperatureResponse other = (Heater.TemperatureResponse) obj;
        boolean result = true;
        result = result && getHeatingOff()
                .equals(other.getHeatingOff());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
    }

    @java.lang.Override
    public int hashCode() {
        if (memoizedHashCode != 0) {
            return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + HEATINGOFF_FIELD_NUMBER;
        hash = (53 * hash) + getLength();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
    }

    public static Heater.TemperatureResponse parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }
    public static Heater.TemperatureResponse parseFrom(java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Heater.TemperatureResponse parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }
    public static Heater.TemperatureResponse parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Heater.TemperatureResponse parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }
    public static Heater.TemperatureResponse parseFrom(byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Heater.TemperatureResponse parseFrom(java.io.InputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
    }
    public static Heater.TemperatureResponse parseFrom(java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Heater.TemperatureResponse parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input);
    }
    public static Heater.TemperatureResponse parseDelimitedFrom(java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Heater.TemperatureResponse parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input);
    }
    public static Heater.TemperatureResponse parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
                .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
        return newBuilder();
    }
    public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Heater.TemperatureResponse prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
                ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
    }

    /**
     * <pre>
     *     Heater Service Definition
     * </pre>
     *
     * Protobuf type {@code SmartEnergy.TemperatureResponse}
     */
    public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:SmartEnergy.TemperatureResponse)
            Heater.TemperatureResponseOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return Heater.HeaterServiceImpl.internal_static_SmartEnergy_TemperatureResponse_descriptor;
        }

        // Implement the getLength() method
        @Override
        public int getLength() {
            return 0;
        }

    @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return Heater.HeaterServiceImpl.internal_static_SmartEnergy_TemperatureResponse_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            Heater.TemperatureResponse.class, Heater.TemperatureResponse.Builder.class);
        }

        // Construct using Heater.TemperatureResponse.newBuilder()
        private Builder() {
            maybeForceBuilderInitialization();
        }

        private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
        }
        @java.lang.Override
        public Builder clear() {
            super.clear();
            heatingOff_ = "";
            return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
            return Heater.HeaterServiceImpl.internal_static_SmartEnergy_TemperatureResponse_descriptor;
        }

        @java.lang.Override
        public Heater.TemperatureResponse getDefaultInstanceForType() {
            return Heater.TemperatureResponse.getDefaultInstance();
        }

        @java.lang.Override
        public Heater.TemperatureResponse build() {
            Heater.TemperatureResponse result = buildPartial();
            if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
            }
            return result;
        }

        @java.lang.Override
        public Heater.TemperatureResponse buildPartial() {
            Heater.TemperatureResponse result = new Heater.TemperatureResponse(this);
            result.heatingOff_ = heatingOff_;
            onBuilt();
            return result;
        }

        @java.lang.Override
        public Builder clone() {
            return (Builder) super.clone();
        }
        @java.lang.Override
        public Builder setField(
                com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
            return (Builder) super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
                com.google.protobuf.Descriptors.FieldDescriptor field) {
            return (Builder) super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
                com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return (Builder) super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                int index, java.lang.Object value) {
            return (Builder) super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
                com.google.protobuf.Descriptors.FieldDescriptor field,
                java.lang.Object value) {
            return (Builder) super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof Heater.TemperatureResponse) {
                return mergeFrom((Heater.TemperatureResponse)other);
            } else {
                super.mergeFrom(other);
                return this;
            }
        }

        public Builder mergeFrom(Heater.TemperatureResponse other) {
            if (other == Heater.TemperatureResponse.getDefaultInstance()) return this;
            if (!other.getHeatingOff().isEmpty()) {
                heatingOff_ = other.heatingOff_;
                onChanged();
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
            return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            Heater.TemperatureResponse parsedMessage = null;
            try {
                parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                parsedMessage = (Heater.TemperatureResponse) e.getUnfinishedMessage();
                throw e.unwrapIOException();
            } finally {
                if (parsedMessage != null) {
                    mergeFrom(parsedMessage);
                }
            }
            return this;
        }

        private java.lang.Object heatingOff_ = "";

        /**
         * <code> string heatingOff = 1;</code>
         */

        public java.lang.String getHeatingOff() {
            java.lang.Object ref =  heatingOff_;
            if (!(ref instanceof java.lang.String)) {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                heatingOff_ = s;
                return s;
            } else {
                return (java.lang.String) ref;
            }
        }

        /**
         * <code> string heatingOff = 1;</code>
         */
        public com.google.protobuf.ByteString
        getHeatingOffBytes() {
            java.lang.Object ref = heatingOff_;
            if (ref instanceof String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                heatingOff_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <code> string heatingOff = 1;</code>
         */
        public Builder setHeatingOff (
                java.lang.String value) {
            if (value == null) {
                throw new NullPointerException();
            }
            heatingOff_ = value;
            onChanged();
            return this;
        }

        /**
         * <code> string heatingOff = 1;</code>
         */
        public Builder clearHeatingOff() {
            heatingOff_ = getDefaultInstance().getHeatingOff();
            onChanged();
            return this;
        }

        /**
         * <code> string heatingOff  = 1;</code>
         */
        public Builder setHeatingOffBytes(
                com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            checkByteStringIsUtf8(value);
            heatingOff_ = value;
            onChanged();
            return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFieldsProto3(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
                final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
        }

        // @@protoc_insertion_point(builder_scope:SmartEnergy.TemperatureResponse)
    }

    // @@protoc_insertion_point(class_scope:SmartEnergyTemperatureResponse)
    private static final Heater.TemperatureResponse DEFAULT_INSTANCE;
    static {
        DEFAULT_INSTANCE = new Heater.TemperatureResponse();
    }

    public static Heater.TemperatureResponse getDefaultInstance() {
        return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TemperatureResponse>
            PARSER = new com.google.protobuf.AbstractParser<TemperatureResponse>() {

        @java.lang.Override
        public TemperatureResponse parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return new TemperatureResponse(input, extensionRegistry);
        }
    };

    public static com.google.protobuf.Parser<TemperatureResponse> parser() {
        return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TemperatureResponse> getParserForType() {
        return PARSER;
    }

    @java.lang.Override
    public Heater.TemperatureResponse getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
    }
}

